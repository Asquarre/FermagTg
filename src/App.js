import './styles.css';

import React, { useState, useEffect } from 'react';
import Categories from './components/Categories';
import ProductList from './components/ProductList';
import Cart from './components/Cart';
import Checkout from './components/Checkout';
import SearchBar from './components/SearchBar';
import axios from 'axios';

const App = () => {
  const [categories] = useState([

    { id: 5, name: '–ü/—Ñ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è‚ùÑÔ∏è' },
    { id: 6, name: '–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—èü•ñ' },
    { id: 7, name: '–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—èüßÅ\n/–ö—É–ª–∏–Ω–∞—Ä–∏—èüç¥' },
    


  ]);

  const [allProducts] = useState({

    '–ü/—Ñ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è‚ùÑÔ∏è': [
      { id: 101, name: '–ú–∞–Ω—Ç—ã —Å –º—è—Å–æ–º', price: 1.8 },
      { id: 102, name: '–ñ—É—Ç–∞ –Ω–∞–Ω —Å –º—è—Å–æ–º', price: 1.8 },
      { id: 103, name: '–ë—É–ª–æ—á–∫–∞ –∞—á–º–∞ —Å —Å—ã—Ä–æ–º', price: 1.8 },
      { id: 104, name: '–°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ 100–≥', price: 1.8 },
      { id: 105, name: '–ë—É–ª–æ—á–∫–∞ –∞—á–º–∞ —Å —à–æ–∫–æ–ª–∞–¥–æ–º 100–≥', price: 1.8 },
      { id: 106, name: '–±—É–ª–æ—á–∫–∞ —Å –∫–æ—Ä–∏—Ü–µ–π 100–≥', price: 1.8 },
      { id: 107, name: '–≠–ª–µ—à —Å –∫—É—Ä–∏—Ü–µ–π', price: 1.8 },
      { id: 108, name: '–ü–ª–µ—Ç–µ–Ω–∫–∞ —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∏–∑—é–º–æ–º', price: 1.8 },
      { id: 109, name: '–ë—É–ª–æ—á–∫–∞ —Å –º–∞–∫–æ–º', price: 1.8 },
      { id: 110, name: '–£—á–ø—É—á–º–∞–∫ —Å –º—è—Å–æ–º', price: 1.8 },
      { id: 111, name: '–ë—É–ª–æ—á–∫–∞ —è—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è 100–≥', price: 1.8 },
      { id: 112, name: '–í–∞—Ä–µ–Ω–∏–∫–∏ –æ—Ç–≤–∞—Ä–Ω—ã–µ —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º –∫–≥', price: 1.8 },
      { id: 113, name: '–í–∞—Ä–µ–Ω–∏–∫–∏ –æ—Ç–≤–∞—Ä–Ω—ã–µ —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∫–≥', price: 1.8 },
      { id: 114, name: '–ë—É–ª–æ—á–∫–∞ –∞—á–º–∞ —Å —Ç–≤–æ—Ä–æ–≥–æ–º –∏ —à–ø–∏–Ω–∞—Ç–æ–º', price: 1.8 },
      { id: 115, name: '–ü–ª–µ—Ç–µ–Ω–∫–∞ —Å–æ —Å–≥—É—â–µ–Ω–∫–æ–π', price: 1.8 },
      { id: 116, name: '–ü–ª–µ—Ç–µ–Ω–∫–∞ —Å –º–∞–∫–æ–º', price: 1.8 },
      { id: 117, name: '–°–æ—Å–∏—Å–∫–∞ –ø–æ-–±–∞–≤–∞—Ä—Å–∫–∏', price: 1.8 },
      { id: 118, name: '–ú–∏–Ω–∏-–ø–∏—Ü—Ü–∞ 130–≥', price: 1.8 },
      { id: 119, name: '–õ–µ–ø–µ—à–∫–∞ —Å —Å—ã—Ä–æ–º 130–≥', price: 1.8 },
      { id: 120, name: '–ö–∞–ª–∞—á —Å–º–∏—Ç —Ç—É—Ä–µ—Ü–∫–∏–π', price: 1.8 },
      { id: 121, name: '–ë—É–ª–æ—á–∫–∞ –ø–æ–∞—á–∞ —Å —Å—ã—Ä–æ–º 100–≥', price: 1.8 },

      { id: 122, name: '–ë—É–ª–æ—á–∫–∞ –ø–æ–∞—á–∞ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π 100–≥', price: 1.8 },
      { id: 123, name: '–ü–∏—Ä–æ–∂–∫–∏ –ø–µ—á–µ–Ω—ã–µ —Å —è–π—Ü–æ–º-–ª—É–∫–æ–º 100–≥', price: 1.8 },
      { id: 124, name: '–ü–∏—Ä–æ–∂–∫–∏ –ø–µ—á–µ–Ω—ã–µ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π 100–≥', price: 1.8 },
      { id: 125, name: '–ü–∏—Ä–æ–∂–∫–∏ –ø–µ—á–µ–Ω—ã–µ —Å –∫–∞–ø—É—Å—Ç–æ–π 100–≥', price: 1.8 },
      { id: 126, name: '–ü–∏—Ä–æ–≥ —Å –∫—É—Ä–∏—Ü–µ–π –∏ –∫–∞—Ä—Ç–æ—à–∫–æ–π –∫–≥', price: 1.8 },
      { id: 127, name: '–ü–∏—Ä–æ–≥ —Å –º—è—Å–æ–º –∏ –∫–∞—Ä—Ç–æ—à–∫–æ–π –∫–≥', price: 1.8 },
      { id: 128, name: '–ü–ª–∞—á–∏–Ω–∞–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π 150–≥', price: 1.8 },
      { id: 129, name: '–ü–ª–∞—á–∏–Ω–∞–¥–∞ —Å –º—è—Å–æ–º 150–≥', price: 1.8 },
      { id: 130, name: '–ü–ª—é—à–∫–∞ —Å —è–±–ª–æ–∫–æ–º 120–≥', price: 1.8 },
      { id: 131, name: '–°–∞–º—Å–∞ —Å —Ç—ã–∫–≤–æ–π', price: 1.8 },
      { id: 132, name: '–°–∞–º—Å–∞ —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º', price: 1.8 },
      { id: 133, name: '–°–∞–º—Å–∞ –±–æ–ª—å—à–∞—è —Å –∫—É—Ä–∏—Ü–µ–π', price: 1.8 },
      { id: 134, name: '–°–∞–º—Å–∞ –±–æ–ª—å—à–∞—è —Å –º—è—Å–æ–º', price: 1.8 },
      { id: 135, name: '–°–∞–º—Å–∞ –±–æ–ª—å—à–∞—è —Å —Å—ã—Ä–æ–º', price: 1.8 },
      { id: 136, name: '–°–∞–º—Å–∞ –ú–∏–∫—Å', price: 1.8 },
      { id: 137, name: '–°–∞–º—Å–∞ —É–π–≥—É—Ä—Å–∫–∞—è —Å –º—è—Å–æ–º', price: 1.8 },
      { id: 138, name: '–°–∞–º—Å–∞ —à–∞—à–ª—ã–∫ —Ñ–∏–ª–µ', price: 1.8 },
      { id: 139, name: '–°–ª–æ–π–∫–∞ —Å —Å—ã—Ä–æ–º 100–≥', price: 1.8 },
      { id: 140, name: '–°–ª–æ–π–∫–∞ —Å —è–±–ª–æ–∫–æ–º 120–≥', price: 1.8 },
      { id: 141, name: '–¢–µ—Å—Ç–æ –¥–ª—è –±–∞—É—Ä—Å–∞–∫–æ–≤ –∫–≥', price: 1.8 },
      { id: 142, name: '–¢–µ—Å—Ç–æ —Å–ª–æ–µ–Ω–æ–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –∫–≥', price: 1.8 },
    ],
    '–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—èü•ñ': [
      { id: 2401, name: '–ë–∞–≥–µ—Ç 300–≥', price: 1.8 },
      { id: 2402, name: '–ë–∞—Ç–æ–Ω –¢—É—Ä–µ—Ü–∫–∏–π 250–≥', price: 1.2 },
      { id: 2403, name: '–ë–∞–≥–µ—Ç –∂–∏–≤–∞—è —Ä–æ–∂—å 300–≥', price: 2.0 },
      { id: 2404, name: '–ë–∞—Ç–æ–Ω –º–æ–ª–æ—á–Ω—ã–π —Å –∫—É–Ω–∂—É—Ç–æ–º (–í –Ω–∞—Ä–µ–∑–∫–µ) 300–≥', price: 1.8 },
      { id: 2405, name: '–ë–∞—Ç–æ–Ω –Ω–∞—Ä–µ–∑–Ω–æ–π (–í –Ω–∞—Ä–µ–∑–∫–µ) 300–≥', price: 1.8 },
      { id: 2406, name: '–ë–∞—Ç–æ–Ω –æ—Ç—Ä—É–±–Ω–æ–π (–í –Ω–∞—Ä–µ–∑–∫–µ) 300–≥', price: 1.2 },
      { id: 2407, name: '–ë—É–ª–æ—á–∫–∞ –±—Ä–æ—Ç—á–∏–Ω 6—à—Ç', price: 2.0 },
      { id: 2408, name: '–ë—É–ª–æ—á–∫–∞ –¥–ª—è –≥–∞–º–±—É—Ä–≥–µ—Ä–∞ 3 —à—Ç', price: 1.8 },
      { id: 2409, name: '–ë—É–ª–æ—á–∫–∞ –¥–ª—è —Ö–æ—Ç-–¥–æ–≥–∞ 3—à—Ç', price: 1.2 },
      { id: 2410, name: '–ë—É–ª–æ—á–∫–∞ —Å–¥–æ–±–Ω–∞—è –∫–≥', price: 2.0 },
      { id: 2411, name: '–õ–∞–≤–∞—à 2—à—Ç', price: 1.8 },
      { id: 2412, name: '–õ–µ–ø–µ—à–∫–∞ –¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è 400–≥', price: 1.8 },
      { id: 2413, name: '–°—É—Ö–∞—Ä–∏ –∫–≥', price: 1.2 },
      { id: 2414, name: '–°—ã—Ä–Ω—ã–µ —à–∞—Ä–∏–∫–∏ –∫–≥', price: 2.0 },
      { id: 2415, name: '–•–ª–µ–± –±–µ–∑–¥—Ä–æ–∂–∂–µ–≤–æ–π —Ä–µ–º–µ—Å–ª–µ–Ω–Ω—ã–π 320–≥', price: 1.2 },
      { id: 2416, name: '–•–ª–µ–± –¥–æ–º–∞—à–Ω–∏–π 300–≥', price: 2.0 },
      { id: 2417, name: '–•–ª–µ–± —Å–∞–π–∫–∞ 400–≥', price: 1.8 },
      { id: 2418, name: '–•–ª–µ–± –∑–∏–º–Ω–∏–π 250–≥', price: 1.8 },
      { id: 2419, name: '–•–ª–µ–± –¥–æ–º–∞—à–Ω–∏–π 460–≥', price: 1.2 },
      { id: 2420, name: '–•–ª–µ–± –∫—É–∫—É—Ä—É–∑–Ω—ã–π (–í –Ω–∞—Ä–µ–∑–∫–µ) 350–≥', price: 2.0 },
      { id: 2421, name: '–•–ª–µ–± –∫—É–∫—É—Ä—É–∑–Ω—ã–π 350–≥', price: 2.0 },
      { id: 2422, name: '–•–ª–µ–± –ø–æ—Å–æ–ª—å—Å–∫–∏–π 400–≥', price: 2.0 },
      { id: 2423, name: '–•–ª–µ–± –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–π (–í –Ω–∞—Ä–µ–∑–∫–µ) 300–≥', price: 2.0 },

      { id: 2424, name: '–•–ª–µ–± –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–π 300–≥', price: 2.0 },
      { id: 2425, name: '–•–ª–µ–± —Ä–∂–∞–Ω–æ–π 500–≥', price: 2.0 },
      { id: 2426, name: '–•–ª–µ–± —Ä–∂–∞–Ω–æ–π –Ω–µ–º–µ—Ü–∫–∏–π 400–≥', price: 2.0 },
      { id: 2427, name: '–•–ª–µ–± —Ä–æ–º–∞—à–∫–∞ —Å –∫—É–Ω–∂—É—Ç–æ–º 300–≥', price: 2.0 },

      { id: 2428, name: '–•–ª–µ–± —Ç–æ—Å—Ç–æ–≤–æ–π 300–≥', price: 2.0 },
      { id: 2429, name: '–•–ª–µ–± —á–µ—Å–Ω–æ—á–Ω—ã–π 200–≥', price: 2.0 },
      { id: 2430, name: '–•–ª–µ–±—Ü—ã –∑–ª–∞–∫–æ–≤—ã–µ –ü/–ü –∫–≥', price: 2.0 },
    ],

    '–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—èüßÅ\n/–ö—É–ª–∏–Ω–∞—Ä–∏—èüç¥': [
      { id: 1801, name: '–ë–∞—É—Ä—Å–∞–∫–∏ –∫–≥', price: 1.8 },
      { id: 1802, name: '–ë–µ–∑–µ —Ü–≤–µ—Ç–Ω–æ–µ –∫–≥', price: 1.2 },
      { id: 1803, name: '–ë–µ–∑–µ —Å —à–æ–∫–æ–ª–∞–¥–æ–º –∫–≥', price: 2.0 },
      { id: 1804, name: '–í–∞—Ñ–µ–ª—å–Ω—ã–µ —Ç—Ä—É–±–æ—á–∫–∏ –∫–≥', price: 1.8 },
      { id: 1805, name: '–ì–∞–ª–µ—Ç–∞ –∫–≥', price: 1.2 },
      { id: 1806, name: '–ö–æ–ª—å—Ü–∞ —Ç–≤–æ—Ä–æ–∂–Ω—ã–µ –∫–≥', price: 2.0 },
      { id: 1807, name: '–ö–µ–∫—Å —Ç–≤–æ—Ä–æ–∂–Ω—ã–π —Å–≤–µ–∂–∞—è —è–≥–æ–¥–∞ 200–≥', price: 1.8 },
      { id: 1808, name: '–ö–æ—Ä–∑–∏–Ω–∫–∞ —Ç–≤–æ—Ä–æ–∂–Ω–∞—è —Å —è–≥–æ–¥–æ–π 150–≥', price: 1.2 },
      { id: 1809, name: '–ö—Ä—É–∞—Å—Å–∞–Ω —Å –∫–æ–ª–±–∞—Å–æ–π 150–≥', price: 1.8 },
      { id: 1810, name: '–ö—Ä—É–∞—Å—Å–∞–Ω —Å –∫—É—Ä–∏—Ü–µ–π 150–≥', price: 1.2 },
      { id: 1811, name: '–°–µ–Ω–¥–≤–∏—á —Å –∫–æ–ª–±–∞—Å–æ–π', price: 2.0 },
      { id: 1812, name: '–°–µ–Ω–¥–≤–∏—á —Å –∫—É—Ä–∏—Ü–µ–π', price: 1.8 },
      { id: 1813, name: '–õ–∞–ø—à–∞ –¥–æ–º–∞—à–Ω—è—è —è–∏—á–Ω–∞—è –∫–≥', price: 1.2 },
      { id: 1814, name: '–ü–∏—Ä–æ–∂–æ–∫ –∂–∞—Ä–µ–Ω—ã–π —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π', price: 2.0 },
      { id: 1815, name: '–ü–∏—Ä–æ–∂–æ–∫ –∂–∞—Ä–µ–Ω—ã–π —Å –∫–∞–ø—É—Å—Ç–æ–π', price: 1.8 },
      { id: 1816, name: '–æ—Ä–µ—à–∫–∏ –∫–≥', price: 1.2 },
      { id: 1817, name: '–ß–µ–±—É—Ä–µ–∫ –∂–∞—Ä–µ–Ω—ã–π —Å –º—è—Å–æ–º 130–≥', price: 1.2 },
      { id: 1818, name: '–ó–∞–ø–µ–∫–∞–Ω–∫–∞ —Ç–≤–æ—Ä–æ–∂–Ω–∞—è —Å–æ —Å–º–æ—Ä–æ–¥–∏–Ω–æ–π –∫–≥', price: 1.8 },
      { id: 1819, name: '–ü–µ—á–µ–Ω—å–µ –∞–º–µ—Ä–∏–∫–∞–Ω–æ –∫–≥', price: 1.2 },
      { id: 1820, name: '–ü–µ—á–µ–Ω—å–µ –±–∏—Å–∫–æ–Ω—Ç–∏ –∫–≥', price: 2.0 },
      { id: 1821, name: '–ü–µ—á–µ–Ω—å–µ –¥–æ–º–∞—à–Ω–µ–µ —Ç–≤–æ—Ä–æ–∂–Ω–æ–µ –∫–≥', price: 1.8 },
      { id: 1822, name: '–¢—Ä–∞–π—Ñ–ª –∫–≥', price: 1.2 },
      { id: 1823, name: '–ü–µ—á–µ–Ω—å–µ –∫—É–∫–∏ –∫–≥', price: 2.0 },
      { id: 1824, name: '–ü–µ—á–µ–Ω—å–µ –∫—É—Ä–∞–±—å–µ –∫–≥', price: 1.8 },
      { id: 1825, name: '–ü–∏—Ä–æ–≥ –≤–æ—Å—Ç–æ—á–Ω—ã–π –∫–≥', price: 1.2 },
      { id: 1826, name: '–ü–µ—á–µ–Ω—å–µ —Ç–∞—Ä—Ç—É—Å –∫–≥', price: 1.8 },
      { id: 1827, name: '–ü–∏—Ä–æ–≥ —Ç–≤–æ—Ä–æ–∂–Ω—ã–π —Å —è–≥–æ–¥–∞–º–∏ –∫–≥', price: 1.2 },
      { id: 1828, name: '–ü—Ä–æ—Ñ–∏—Ç—Ä–æ–ª–∏ —Å–æ –≤–∑–±–∏—Ç—ã–º–∏ —Å–ª–∏–≤–∫–∞–º–∏ –∏ –∫—Ä–µ–º–æ–º —á–∏–∑ –∫–≥', price: 2.0 },
      { id: 1829, name: '–°–æ—á–Ω–∏–∫ —Å —Ç–≤–æ—Ä–æ–≥–æ–º 120–≥', price: 1.8 },
      { id: 1830, name: '–ü–∞—Å—Ç–∞ –∑–µ–ª–µ–Ω–∞—è –∫–≥', price: 1.2 },
      { id: 1831, name: '–°–ø–∞–≥–µ—Ç—Ç–∏ –ø–æ-–¥–æ–º–∞—à–Ω–µ–º—É –∫–≥', price: 2.0 },
      { id: 1832, name: '–¢–æ—Ä—Ç —Ä—ã–∂–∏–∫ –∫–≥', price: 1.8 },
      { id: 1833, name: '–¢–æ—Ä—Ç –ø—ã–∂–∏–∫ –∫–≥', price: 1.2 },
      { id: 1834, name: '–≠–∫–ª–µ—Ä—ã —Å –∫—Ä–µ–º–æ–º –∏ —Å–≥—É—â–µ–Ω–∫–æ–π 120–≥', price: 1.2 },
      { id: 1835, name: '–¢–æ—Ä—Ç —á–∏–∂–∏–∫ –∫–≥', price: 2.0 },
      { id: 1836, name: '–¢–æ—Ä—Ç –∫–∏–µ–≤—Å–∫–∏–π –∫–≥', price: 1.8 },
      { id: 1837, name: '–¢–æ—Ä—Ç —á–µ—Ä–Ω—ã–π –ª–µ—Å –∫–≥', price: 1.2 },
      { id: 1838, name: '–ß–∞–∫-–ß–∞–∫ –∫–≥', price: 2.0 },
      { id: 1839, name: '–•–≤–æ—Ä–æ—Å—Ç –∫–≥', price: 1.8 },
      { id: 2201, name: '–ó–∞–ø—Ä–∞–≤–∫–∞ –¥–ª—è –æ–∫—Ä–æ—à–∫–∏ 300–≥', price: 1.8 },
      { id: 2202, name: '–ù–∞–±–æ—Ä –¥–ª—è –æ–∫—Ä–æ—à–∫–∏ —Å –º—è—Å–æ–º –∫–≥', price: 1.2 },
      { id: 2203, name: '–ù–∞–±–æ—Ä –¥–ª—è –æ–∫—Ä–æ—à–∫–∏ —Å –∫–æ–ª–±–∞—Å–æ–π –∫–≥', price: 2.0 },
      { id: 2210, name: '–ö–∞–ø—É—Å—Ç–∞ –∫–≤–∞—à–µ–Ω–∞—è –∫–≥', price: 1.2 },
    ],
    
  });

  const [selectedCategory, setSelectedCategory] = useState(null);
  const [products, setProducts] = useState([]);
  const [filteredProducts, setFilteredProducts] = useState([]);
  const [cart, setCart] = useState([]);
  const [lastOrder, setLastOrder] = useState(null);
  const [view, setView] = useState('categories'); // 'categories', 'products', 'checkout'

   useEffect(() => {
    const saved = localStorage.getItem('lastOrder');
    if (saved) {
      try {
        setLastOrder(JSON.parse(saved));
      } catch (e) {
        console.error('Failed to parse saved order', e);
      }
    }
  }, []);

  const handleSelectCategory = (categoryName) => {
    setSelectedCategory(categoryName);
    setProducts(allProducts[categoryName]);
    setFilteredProducts(allProducts[categoryName]);
    setView('products');
  };

  const handleAddToCart = (productId) => {
    const product = products.find((p) => p.id === productId);
    const existingItem = cart.find((item) => item.id === productId);

    if (existingItem) {
      setCart(
        cart.map((item) =>
          item.id === productId
            ? { ...item, quantity: item.quantity + 1 }
            : item
        )
      );
    } else {
      setCart([...cart, { ...product, quantity: 1 }]);
    }
  };

  const handleRemoveFromCart = (productId) => {
    const existingItem = cart.find((item) => item.id === productId);

    if (existingItem) {
      if (existingItem.quantity === 1) {
        setCart(cart.filter((item) => item.id !== productId));
      } else {
        setCart(
          cart.map((item) =>
            item.id === productId
              ? { ...item, quantity: item.quantity - 1 }
              : item
          )
        );
      }
    }
  };

const handleSearch = (term) => {
  if (term.trim() === '') {
    setFilteredProducts(products);
    return;
  }

  const termLower = term.toLowerCase();

  const reordered = products.slice().sort((a, b) => {
    const aMatches = a.name.toLowerCase().includes(termLower) ? 1 : 0;
    const bMatches = b.name.toLowerCase().includes(termLower) ? 1 : 0;
    // Sort so that matching products come first
    return bMatches - aMatches;
  });

  setFilteredProducts(reordered);
};

  const handleCheckout = () => {
    if (cart.length === 0) {
      alert('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.');
      return;
    }
    setView('checkout');
  };

  const handleOrderSubmit = (orderDetails) => {
    return axios
      .post('/api/submit-order', {
        user_id: orderDetails.user_id || '', // Include user_id
        address: orderDetails.address,
        phone: orderDetails.phone,
        items: cart,
        timestamp: orderDetails.timestamp,
      })
      .then(() => {
        alert('–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑!');
        localStorage.setItem('lastOrder', JSON.stringify(cart));
        setLastOrder(cart);
        setCart([]);
        setView('categories');
      })
      .catch(() => {
        alert('–û—à–∏–±–∫–∞!');
        throw new Error('Order submission failed');
      });
  };

  const handleRepeatOrder = () => {
    if (lastOrder && lastOrder.length > 0) {
      setCart(lastOrder);
      if (categories.length > 0) {
        const firstCategoryName = categories[0].name;
        setSelectedCategory(firstCategoryName);
        setProducts(allProducts[firstCategoryName]);
        setFilteredProducts(allProducts[firstCategoryName]);
      }
      setView('checkout');
    } else {
      alert('–ü—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–∫–∞–∑ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.');
    }
  };

  return (
    <div style={{ padding: '20px' }}>
      <header
        style={{
          display: 'flex',
          alignItems: 'center',
          gap: '10px',
          justifyContent: 'space-between',
        }}
      >
        <img
          src="/Logo.png"
          alt="Grocery Store Logo"
          style={{ width: '150px', height: '150px' }}
        />
        {view === 'categories' && lastOrder && lastOrder.length > 0 && (
          <button
            className="repeat-order-button fade-in"
            onClick={handleRepeatOrder}
          >
            –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ—à–ª—ã–π –∑–∞–∫–∞–∑ üîÅ
          </button>
        )}
      </header>
      {view === 'categories' && (
        <Categories
          categories={categories}
          onSelectCategory={handleSelectCategory}

        />
      )}
      {view === 'products' && (
        <>
          <SearchBar onSearch={handleSearch} />
          <ProductList
            products={filteredProducts}
            onAdd={handleAddToCart}
            onRemove={handleRemoveFromCart}
            onBack={() => setView('categories')}
            onCheckout={handleCheckout} // Pass handleCheckout here
            cart={cart}
          />
          <div className="shopping-cart">
            <h3>–∫–æ—Ä–∑–∏–Ω–∞</h3>
            {cart.length > 0 ? (
              <ul>
                {cart.map((item) => (
                  <li key={item.id}>
                    {item.name} - {item.quantity} x ‚Ç∏{item.price.toFixed(2)} = ‚Ç∏
                    {(item.quantity * item.price).toFixed(2)}
                  </li>
                ))}
              </ul>
            ) : (
              <p>–í–∞—à–∞ –ö–æ—Ä–∑–∏–Ω–∞ –ü—É—Å—Ç–∞.</p>
            )}
            {cart.length > 0 && (
              <div className="total">
                –°—É–º–º–∞ –ó–∞–∫–∞–∑–∞: ‚Ç∏
                {cart
                  .reduce((acc, item) => acc + item.quantity * item.price, 0)
                  .toFixed(2)}
              </div>
            )}
          </div>
          {/* The Checkout button has been moved to ProductList.js */}
        </>
      )}
      {view === 'checkout' && (
        <Checkout
          cart={cart}
          onSubmit={handleOrderSubmit}
          onBack={() => setView('products')}
        />
      )}
    </div>
  );
};

export default App;
